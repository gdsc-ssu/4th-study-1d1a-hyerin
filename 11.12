#include <iostream>
#include <deque>
#include <algorithm>
using namespace std;

int main() {
    int N, M;
    cin >> N >> M;
    
    deque<int> dq;
    for (int i = 1; i <= N; i++) {
        dq.push_back(i);
    }

    int count = 0; 

    for (int i = 0; i < M; i++) {
        int target;
        cin >> target;

        int pos = find(dq.begin(), dq.end(), target) - dq.begin();

        if (pos < dq.size() - pos) { 
            while (dq.front() != target) {
                dq.push_back(dq.front());
                dq.pop_front();
                count++;
            }
        } else { 
            while (dq.front() != target) {
                dq.push_front(dq.back());
                dq.pop_back();
                count++;
            }
        }
        
        dq.pop_front();
    }

    cout << count << endl;
    return 0;
}
